worker_processes auto;

# load brotli modules
# see https://docs.nginx.com/nginx/admin-guide/dynamic-modules/brotli/
# loaded either from /usr/share/nginx/<modules> or /etc/nginx/modules..
# not exactly sure where they are loaded from in which case.
# These files are placed there inside Dockerfile build.
load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

# provides the configuration file context in which the directives that affect
# connection processing are specified.
events {
  # determines how much clients will be served per worker
  worker_connections 1024;
}

http {
  # this is where the angular app is located
  root /usr/share/nginx/html;

  # not needed here; we do this in reverse proxy
  access_log off;

  # we don't need ETAG caching mechanism
  etag off;

  # copies data between one FD and other from within the kernel
  # faster than read() + write()
  sendfile on;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # includes /etc/nginx/mime.types
  include mime.types;

  gzip            on;
  gzip_min_length 1000;
  gzip_static     on;
  gzip_proxied    expired no-cache no-store private auth;
  # For the option gzip_types, the mime-type text/html is always included by default,
  # so one doesn't need to specify it explicitly.
  gzip_types      text/plain text/css text/xml
                  application/javascript application/json application/xml application/rss+xml
                  image/svg+xml image/x-icon;

  # only works because we loaded the module earlier
  brotli            on;
  brotli_comp_level 7;
  brotli_static     on;
  # For the option brotli_types, the mime-type text/html is always included by default,
  # so one doesn't need to specify it explicitly.
  brotli_types      text/plain text/css text/xml
                    application/javascript application/json application/xml application/rss+xml
                    image/svg+xml image/x-icon;

  # needed if too many too long server configurations are provided
  # server_names_hash_bucket_size 64;

  # not a big problem
  # maybe TODO in future; also compile this module
  # https://github.com/openresty/headers-more-nginx-module#installation
  # more_clear_headers 'server';

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location ~* \.(?:css|js|png|jpg|jpeg)$ {
      # this is fine because we have fingerprinted files anyway
      expires 365d;
      add_header Cache-Control "public, no-transform";
    }

    location ~* \.(?:ico|webmanifest|txt)$ {
      # this is fine because we have fingerprinted files anyway
      expires 1d;
      add_header Cache-Control "public, no-transform";
    }

    location / {

      # serve static content with 404.html as 404 fallback
      try_files $uri $uri/ /404.html =404;
      # try_files $uri $uri/ /index.html;
    }
  }

}


